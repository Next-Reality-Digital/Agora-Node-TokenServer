name: Docker Build and Deploy with Helm

on:
  workflow_dispatch:
    inputs:
      key_vault_id:
        description: "Azure Key Vault ID"
        required: true
        type: string
        default: "qa-metaverse"
      secret_name:
        description: "Secret Name"
        required: true
        type: string
        default: "app-metaverse-secrets"
      release_name:
        description: "Helm release name"
        required: true
        type: string
        default: "metaverse"
      image_tag:
        type: choice
        options:
          - dev
          - latest
        description: "Image tag"
        required: false
        default: "dev"
      branch:
        type: string
        description: "Branch to deploy"
        required: true
        default: "main"
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: nextrealitydigital.azurecr.io
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t nextrealitydigital.azurecr.io/agora-node-token-server:${{ github.sha }} .
          docker push nextrealitydigital.azurecr.io/agora-node-token-server:${{ github.sha }}
          
      - name: Update tag
        run: |
          if [ "${{ github.event.inputs.image_tag }}" == "latest" ]; then
            docker tag nextrealitydigital.azurecr.io/agora-node-token-server:${{ github.sha }} nextrealitydigital.azurecr.io/agora-node-token-server:latest
            docker push nextrealitydigital.azurecr.io/agora-node-token-server:latest
          else
            docker tag nextrealitydigital.azurecr.io/agora-node-token-server:${{ github.sha }} nextrealitydigital.azurecr.io/agora-node-token-server:dev  
            docker push nextrealitydigital.azurecr.io/agora-node-token-server:dev
          fi

      - name: Echo the tag
        run: |
          echo ::set-output name=tag::${{ github.sha }}

  trigger_workflow:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.branch
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger Helm Chart deployment
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: ${{ github.repository_owner }}
          repo: metaverse-helm-charts
          github_token: ${{ secrets.ORG_TOKEN }}
          workflow_file_name: deploy.yaml
          ref: ${{ github.event.inputs.branch }}
          wait_interval: 20
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true
          client_payload: '{"image_tag": "${{ github.sha }}", "key_vault_id": "${{ github.event.inputs.key_vault_id }}", "secret_name": "${{ github.event.inputs.secret_name }}", "app_to_deploy": "agora-token-server", "release_name": "${{ github.event.inputs.release_name }}"}'

  tigger_dev_workflow:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger Helm Chart deployment
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: ${{ github.repository_owner }}
          repo: metaverse-helm-charts
          github_token: ${{ secrets.ORG_TOKEN }}
          workflow_file_name: deploy.yaml
          ref: main
          wait_interval: 20
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true
          client_payload: '{"image_tag": "${{ github.sha }}", "key_vault_id": "qa-metaverse", "secret_name": "api-agora-secrets", "app_to_deploy": "agora-token-server", "release_name": "metaverse"}'