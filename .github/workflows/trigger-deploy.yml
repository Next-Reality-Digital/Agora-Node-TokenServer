name: Trigger Deploy

on:
  workflow_dispatch:
    inputs:
      key_vault_id:
        description: "Azure Key Vault ID"
        required: true
        type: string
        default: "qa-metaverse"
      secret_name:
        description: "Secret Name"
        required: true
        type: string
        default: "api-agora-secrets"
      release_name:
        description: "Helm release name"
        required: true
        type: string
        default: "metaverse"
      metaverse_namespace:
        description: "Metaverse namespace"
        required: true
        type: string
        default: "metaverse"
      image_tag:
        type: string
        description: "Image tag"
        required: false
        default: "dev"
      branch:
        type: string
        description: "Branch to deploy"
        required: true
        default: "main"
      registry:
        type: string
        description: "Azure Container Registry URL"
        required: true
        default: "nextrealitydigital.azurecr.io"
      image_name:
        type: string
        description: "Docker image name"
        required: true
        default: "agora-node-token-server"

env:
  REGISTRY: ${{ github.event.inputs.registry || 'nextrealitydigital.azurecr.io' }}
  IMAGE_NAME: ${{ github.event.inputs.image_name || 'agora-node-token-server' }}

jobs:
  trigger_workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Helm Chart deployment
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: ${{ github.repository_owner }}
          repo: metaverse-helm-charts
          github_token: ${{ secrets.ORG_TOKEN }}
          workflow_file_name: deploy.yaml
          ref: ${{ github.event.inputs.branch }}
          wait_interval: 20
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true
          client_payload: '{"image_tag": "${{ github.event.inputs.image_tag }}", "key_vault_id": "${{ github.event.inputs.key_vault_id }}", "secret_name": "${{ github.event.inputs.secret_name }}", "app_to_deploy": "agora-token-server", "release_name": "${{ github.event.inputs.release_name }}", "metaverse_namespace": "${{ github.event.inputs.metaverse_namespace }}"}'